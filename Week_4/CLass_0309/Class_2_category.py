####类与对象的特性
####1封装：：：初始化
####2继承：：：继承拥有父类所有的方法，属性，都可以调用使用
####3拓展：：如果子类里面有的方法，父类没有，子类的方法就叫拓展
####4重写：：子类的方法与父类方法重名，就叫重写
        #### 子类重新初始化，但是子类重新初始化之后，父类使用初始化的地方子类不能使用，会报错
        ###将不再使用父类的方法，使用子类自己的,
        ###生效范围，在这个子类里面
##新一代手机，新加一个支付功能
from Week_4.CLass_0309.Class_1_category import phone
class Phone_1(phone):###括号里面的是父类，phone_1是子类
    ###初始化类似覆盖
    def __init__(self):##如果子类有自己的初始化，局部用调用父类的，但是父类使用的参数初始化的地方，子类都不能在使用
        pass

    def Phone_Info(self):###父类有同名的方法，将不再执行父类的，调用自己的
        print('这是一款智能手机')
    def pay(self):##支付功能
        print('可以支付')

##继承：子类可以拥有父类里面的所有的属性以及方法-->就可以直接调用（要看父类的方法）
if __name__ == '__main__':
    ##爸爸的就是我的，全部继承，我的还是我的
    Phone_1.Call('15938848393')##继承父类
    #Phone_1.pay()###对象方法，使用对象调用，不能用类调用
    #Phone_1.pay('A')
    # t=Phone_1('red','2300','vivo','5.5')
    ##对象=类名()
    t = Phone_1()
    t.pay()
    t.Phone_Info()

